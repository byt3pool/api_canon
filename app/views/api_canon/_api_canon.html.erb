<div class='row-fluid"'>
  <div class='span12'>
    <%- @api_doc ||= ::ApiCanon::DocumentationStore.fetch controller.controller_path -%>
    <h1><%= @api_doc.display_name %></h1>
    <p class='lead'><%= @api_doc.description %></p>
    <%- @api_doc.documented_actions.each do |doco| -%>
      <div class='row-fluid"'>
        <div class='span12'>
          <h2><%= doco.action_name.to_s.titleize %></h2>
          <p><%= doco.description %></p>
          <% doco_prefix = "#{@api_doc.controller_name}_#{doco.action_name}" %>
          <% if Rails.version.starts_with?('2') %>
            <%= render :partial => 'api_canon/rails_2_form', :locals => {:doco => doco, :doco_prefix => doco_prefix} %>
          <% else %>
            <%= render :partial => 'api_canon/form', :locals => {:doco => doco, :doco_prefix => doco_prefix} %>
          <% end %>
          <div id='<%= "#{@api_doc.controller_name}_#{doco.action_name}_results" %>' class='results'>
            <div class='urls'></div>
            <div class='curls'></div>
            <div class='response'></div>
          </div>
        </div>
      </div>
    <%- end -%>
  </div>
</div>

<script type='text/javascript'>
  function generate_url_and_call_it(controller_name, action_name) {
    var form = jQuery('#' + controller_name + '_' + action_name + '_form');
    var api_url_request = form.attr('action');
    var post_request = jQuery.post(api_url_request, form.serialize());
    post_request.done(function(data) {
      var urls_div = jQuery('#' + controller_name + '_' + action_name + '_results div.urls')
      var curls_div = jQuery('#' + controller_name + '_' + action_name + '_results div.curls')
      var response_div = jQuery('#' + controller_name + '_' + action_name + '_results div.response')
      //urls_div.html('<p>URLs generated: </p>');
      curls_div.html('<p>Curl requests generated: </p>');
      //jQuery.each(data['urls'], function(key,value) {urls_div.append(key.toUpperCase() + ': <pre>' + value + '</pre>')});
      jQuery.each(data['curl'], function(key,value) {curls_div.append(key.toUpperCase() + ': <pre>' + value + '</pre>')});
      jQuery.each(data['urls'], function(key,value) {
        if (key == 'get') {
          jQuery.get(value)
            .done(function(data,textStatus,jqXHR) {
              response_div.removeClass('error')
                .html('<p>Response: (' + jqXHR.status + ' ' + jqXHR.statusText + ') </p><pre></pre>')
              if (jqXHR.getResponseHeader('Content-Type').match(/(text|application)\/json.*/)) {
                response_div.find('pre').append(JSON.stringify(eval(data), undefined, 2))
              } else {
                response_div.find('pre').text(jqXHR.responseText)
              }
            })
            .fail(function(jqXHR,textStatus,errorThrown) {
              response_div.addClass('error')
                .html('<p>Response: (' + jqXHR.status + ' ' + jqXHR.statusText + ') </p><pre></pre>')
                response_div.find('pre').text(jqXHR.responseText)
            })
        }
      });
    });
    return false;
  }
</script>

<% content_for :sidebar do %>
<ul class='nav nav-list'>
  <% ApiCanon::DocumentationStore.instance.docos.each do |key, doco| %>
    <li>
      <%- doco_link = doco.sidebar_link || url_for(:controller => doco.controller_path, :action => :index, :format => :html) -%>
      <%= link_to doco.display_name, doco_link %>
    </li>
  <% end %>
</ul>
<% end %>
